// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace PostgRESTSharp.Commands.GenerateRESTRoutes.Templates {
    using PostgRESTSharp.Commands.GenerateRESTRoutes;
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using PostgRESTSharp.REST;
    using System;
    
    
    public partial class NancyRESTRoute : NancyRESTRouteBase {
        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 8 ""
            this.Write("using System;\nusing Nancy;\nusing Nancy.Extensions;\nusing Nancy.ModelBinding;\nusing Nancy.Security;\nusing RestSharp;\nusing RestSharp.Authenticators;\nusing Newtonsoft.Json;\nusing System.Collections.Generic;\nusing System.Linq;\nusing PostgRESTSharp.Shared;\nusing ");
            
            #line default
            #line hidden
            
            #line 19 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelNamespace));
            
            #line default
            #line hidden
            
            #line 19 ""
            this.Write(";\nusing ");
            
            #line default
            #line hidden
            
            #line 20 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(ExtensionNamespace));
            
            #line default
            #line hidden
            
            #line 20 ""
            this.Write(";\n\nnamespace ");
            
            #line default
            #line hidden
            
            #line 22 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            
            #line 22 ""
            this.Write(" \n{\n    public class ");
            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write(" : NancyModule\n    {\n    \tpublic ");
            
            #line default
            #line hidden
            
            #line 26 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            
            #line 26 ""
            this.Write("(IApiClient client, IPostgRESTUrlConfigurationProvider postgRESTConfigProvider, IRestLinkBuilder linkBuilder, IRoleEnforcer roleEnforcer) \n    \t{\n");
            
            #line default
            #line hidden
            
            #line 28 ""
 if (Resource.AccessClaims.Count() > 0) { 
            
            #line default
            #line hidden
            
            #line 29 ""
            this.Write("\t\t\troleEnforcer.EnsureUserBelongsToRoles(this, new[] { \n");
            
            #line default
            #line hidden
            
            #line 30 ""
 string prefix = ""; 
            
            #line default
            #line hidden
            
            #line 31 ""
foreach(var claim in Resource.AccessClaims){
            
            #line default
            #line hidden
            
            #line 32 ""
            this.Write("\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 32 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(prefix));
            
            #line default
            #line hidden
            
            #line 32 ""
            this.Write(" \"");
            
            #line default
            #line hidden
            
            #line 32 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(claim));
            
            #line default
            #line hidden
            
            #line 32 ""
            this.Write("\"\n\t");
            
            #line default
            #line hidden
            
            #line 33 ""
 prefix = ","; 
            
            #line default
            #line hidden
            
            #line 34 ""
}
            
            #line default
            #line hidden
            
            #line 35 ""
            this.Write("\t\t});\n");
            
            #line default
            #line hidden
            
            #line 36 ""
}
            
            #line default
            #line hidden
            
            #line 37 ""
            this.Write("\n");
            
            #line default
            #line hidden
            
            #line 38 ""
foreach(var method in Resource.Methods){
            
            #line default
            #line hidden
            
            #line 39 ""
            this.Write("\t\t\t");
            
            #line default
            #line hidden
            
            #line 39 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(GetVerbString(method.Verb)));
            
            #line default
            #line hidden
            
            #line 39 ""
            this.Write("[\"/");
            
            #line default
            #line hidden
            
            #line 39 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(Resource.Uri + GetParameters(method.URIParameters)));
            
            #line default
            #line hidden
            
            #line 39 ""
            this.Write("\", true] = async (ctx, ct) =>\n    \t\t{\n");
            
            #line default
            #line hidden
            
            #line 41 ""
if (ErrorHandlingMode.Equals(ErrorHandlingModes.STANDARD)){
            
            #line default
            #line hidden
            
            #line 42 ""
            this.Write("                throw new NotImplementedException(\"TODO: implement try/catches around modules\");\n");
            
            #line default
            #line hidden
            
            #line 43 ""
}else{
            
            #line default
            #line hidden
            
            #line 44 ""
switch(method.Verb){
            
            #line default
            #line hidden
            
            #line 45 ""
case RESTVerbEnum.GET:
            
            #line default
            #line hidden
            
            #line 46 ""
if(method.VerbDetail == RESTVerbDetailEnum.Collection){
            
            #line default
            #line hidden
            
            #line 47 ""
            this.Write("\t\t\t\tvar authenticator = new HttpBasicAuthenticator(Context.CurrentUser.GetDatabaseUser(), \"\");\n    \t\t    var queryStringParameters = new[]\n                {\n                    new KeyValuePair<string, string>(\"order\", \"");
            
            #line default
            #line hidden
            
            #line 50 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(Resource.KeyName));
            
            #line default
            #line hidden
            
            #line 50 ""
            this.Write(".asc\"),\n                };\n                var models = client.ExecuteGet<List<");
            
            #line default
            #line hidden
            
            #line 52 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(GETModelName));
            
            #line default
            #line hidden
            
            #line 52 ""
            this.Write(">>(\"");
            
            #line default
            #line hidden
            
            #line 52 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(Resource.PostgRESTUri));
            
            #line default
            #line hidden
            
            #line 52 ""
            this.Write("\", postgRESTConfigProvider.Url, queryStringParameters, authenticator);\n\t\t\t\tforeach(var model in models)\n\t\t\t\t{\n\t\t\t\t\tUrl url = new Url();\n\t\t\t\t\turl.HostName = this.Request.Url.HostName;\n\t\t\t\t\turl.Port = this.Request.Url.Port;\n\t\t\t\t\turl.BasePath = this.Request.Url.Path;\n\t\t\t\t\turl.Path = \"/\" + model.GetPrimaryKeyValue();\n\t\t\t\t\tmodel.BuildLinks(linkBuilder, url);\n\t\t\t\t}\n\n\t\t\t\treturn models;\n");
            
            #line default
            #line hidden
            
            #line 64 ""
}else{
            
            #line default
            #line hidden
            
            #line 65 ""
            this.Write("\t\t\t\tvar authenticator = new HttpBasicAuthenticator(Context.CurrentUser.GetDatabaseUser(), \"\");\n                var queryStringParameters = new[]\n                {\n                    new KeyValuePair<string, string>(\"id\", string.Format(\"eq.{0}\", ctx.id)),\n                };\n                var models = client.ExecuteGet<List<");
            
            #line default
            #line hidden
            
            #line 70 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(GETModelName));
            
            #line default
            #line hidden
            
            #line 70 ""
            this.Write(">>(\"");
            
            #line default
            #line hidden
            
            #line 70 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(Resource.PostgRESTUri));
            
            #line default
            #line hidden
            
            #line 70 ""
            this.Write("\", postgRESTConfigProvider.Url, queryStringParameters, authenticator);\n\t\t\t\tvar model = models.FirstOrDefault();\n    \t\t    if (model != null)\n    \t\t    {\n                    model.BuildLinks(linkBuilder, this.Request.Url);\n    \t\t    }\n\t\t\t\treturn model;\n");
            
            #line default
            #line hidden
            
            #line 77 ""
}
            
            #line default
            #line hidden
            
            #line 78 ""
break;
            
            #line default
            #line hidden
            
            #line 79 ""
case RESTVerbEnum.POST:
            
            #line default
            #line hidden
            
            #line 80 ""
            this.Write("\t\t\t\tvar model = this.Request.Body.AsString();\n                var authenticator = new HttpBasicAuthenticator(Context.CurrentUser.GetDatabaseUser(), \"\");\n                var response = client.ExecutePost(\"");
            
            #line default
            #line hidden
            
            #line 82 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(Resource.PostgRESTUri));
            
            #line default
            #line hidden
            
            #line 82 ""
            this.Write("\", postgRESTConfigProvider.Url, model, authenticator);\n                var locationHeader = response.Headers.First(a => a.Name.Equals(\"Location\", StringComparison.OrdinalIgnoreCase));\n\t            var primaryKeyValue = locationHeaderParser.ParseLocationHeader<int>(\"id\", new Uri((string)locationHeader.Value));\n                var responseModel = new ");
            
            #line default
            #line hidden
            
            #line 85 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(POSTResponseModelName));
            
            #line default
            #line hidden
            
            #line 85 ""
            this.Write("(primaryKeyValue);\n    \t\t    responseModel.BuildSelfLink(linkBuilder, this.Request.Url);\n    \t\t\treturn responseModel;\n");
            
            #line default
            #line hidden
            
            #line 88 ""
break;
            
            #line default
            #line hidden
            
            #line 89 ""
default:
            
            #line default
            #line hidden
            
            #line 90 ""
break;
            
            #line default
            #line hidden
            
            #line 91 ""
}
            
            #line default
            #line hidden
            
            #line 92 ""
}
            
            #line default
            #line hidden
            
            #line 93 ""
            this.Write("    \t\t};\n");
            
            #line default
            #line hidden
            
            #line 94 ""
}
            
            #line default
            #line hidden
            
            #line 95 ""
            this.Write("\t\t\n    \t}\n\n    }\n\n}");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public virtual void Initialize() {
        }
    }
    
    public class NancyRESTRouteBase {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((value != null)) {
                        this.formatProvider = value;
                    }
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
